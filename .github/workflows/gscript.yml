name: Label & Comment Issues and PRs

on:
  issues:
    types:
      - opened
      - reopened
      - closed
  pull_request:
    types:
      - opened

jobs:

  label_issues:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && (github.event.action == 'opened' || github.event.action == 'reopened')
    permissions:
      issues: write
    steps:
      - name: Attach label to issue
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["issue", "fix"]
            })
      - name: Comment on new issue
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Thanks for opening this issue! We'll take a look as soon as possible.


  issue_closed:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Comment on closed issue
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… The issue is now closed. Thank you!'
            })
 
  comment_on_first_pr:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    permissions:
      issues: write
      contents: read
    steps:
      - name: Check PR count for the user
        id: pr_check
        uses: actions/github-script@v6
        with:
          script: |
            const { data: result } = await github.rest.search.issuesAndPullRequests({
              q: `is:pr author:${context.payload.pull_request.user.login} repo:${context.repo.owner}/${context.repo.repo}`
            });

            return { pr_count: result.total_count };
      - name: Comment on first pull request
        if: ${{ steps.pr_check.outputs.pr_count == '1' }}
        uses: actions/github-script@v6
        with:
          script: |
            const pr_number = context.payload.pull_request.number;
            await github.rest.issues.createComment({
              issue_number: pr_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "ðŸŽ‰ Congratulations on opening your first pull request!"
            });
